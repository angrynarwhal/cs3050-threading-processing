from pptx import Presentation
from pptx.util import Inches
import os

# Step-by-step explanation content
steps = [
    ("Step 1: Threading in Python",
     "Python's threading is limited by the Global Interpreter Lock (GIL), which prevents true parallel execution of threads. Threads are useful for I/O-bound tasks, not CPU-bound ones."),

    ("Step 2: Multiprocessing in Python",
     "Multiprocessing in Python avoids the GIL by running tasks in separate processes, each with its own Python interpreter and memory space. This allows true parallelism at the cost of more memory and overhead."),

    ("Step 3: Python's GIL Explained",
     "The GIL ensures that only one thread executes Python bytecode at a time. This makes CPython simpler but limits CPU-bound multithreaded performance."),

    ("Step 4: Multiprocessing Overhead",
     "While multiprocessing allows parallelism, it has overhead due to data serialization, memory duplication, and inter-process communication."),

    ("Step 5: Go's Goroutines",
     "Go uses goroutines for concurrency. They are lightweight, managed by the Go runtime, and not subject to a GIL. Goroutines can execute in parallel using multiple OS threads."),

    ("Step 6: Summary - Python vs Go",
     "Python excels at rapid development and I/O-bound tasks with threads. Go is better suited for scalable, parallel, CPU-bound applications due to its built-in concurrency model.")
]

# Create presentation
prs = Presentation()
title_slide_layout = prs.slide_layouts[0]
content_slide_layout = prs.slide_layouts[1]

# Title slide
slide = prs.slides.add_slide(title_slide_layout)
slide.shapes.title.text = "Concurrency in Python vs Go"
slide.placeholders[1].text = "Step-by-step explanation and code comparison"

# Add explanation slides
for title_text, body_text in steps:
    slide = prs.slides.add_slide(content_slide_layout)
    slide.shapes.title.text = title_text
    slide.placeholders[1].text = body_text

# Add code slides for step1.py–step4.py and step1.go–step5.go
code_files = [f"step{i}.py" for i in range(1, 5)] + [f"step{i}.go" for i in range(1, 6)]

for filename in code_files:
    slide = prs.slides.add_slide(content_slide_layout)
    slide.shapes.title.text = f"Code: {filename}"
    try:
        with open(filename, 'r') as f:
            code = f.read()
        code_snippet = "\n".join(code.splitlines()[:30])
        slide.placeholders[1].text = code_snippet
    except FileNotFoundError:
        slide.placeholders[1].text = f"The file {filename} does not exist."

# Save presentation
output_path = "Python_vs_Go_Concurrency_Slides_AutoGenerated.pptx"
prs.save(output_path)
print(f"✅ Presentation saved as: {output_path}")
